# C035:試験の合格判定
# 制限時間カウント
# あと0時間58分36秒
# 総合力を重視する paiza 大学の入試では 1 次試験 (英語、数学、理科、国語、地理歴史の 5 科目で各 100 点満点) の成績で2段階選抜を行います。2段階選抜を通過する条件は以下のようになっています。

# 全科目の合計得点が 350 点以上
# 理系の受験者の場合は理系 2 科目 (数学、理科) の合計得点が 160 点以上
# 文系の受験者の場合は文系 2 科目 (国語、地理歴史) の合計得点が 160 点以上
# 受験者それぞれの各科目の点数が入力されるので、何人2段階選抜を通過できるかを求めてください。

# 例）

# 図1

# 受験者 2 は全科目の合計は 350 点以上ですが文系 2 科目の合計が 160 点未満なので不合格。一方受験者 4 は理系 2 科目の合計は 160 点以上ですが全科目の合計が 350 点未満なので不合格となります。

# → 通過人数: 2 人

# これは入力例 1 に対応しています。

# 評価ポイント
# 10回のテストケースで、正答率、実行速度、メモリ消費量をはかり得点が決まります。
# より早い回答時間で提出したほうが得点が高くなります。
# 複数のテストケースで正しい出力がされるか評価（+50点）
# 解答までの速さ評価（+50点）
# 入力される値
# 入力は以下のフォーマットで与えられます。

# N
# t_1 e_1 m_1 s_1 j_1 g_1 
# t_2 e_2 m_2 s_2 j_2 g_2
# ...
# t_N e_N m_N s_N j_N g_N
# ・1 行目には受験者の人数を表す整数 N が与えられます。
# ・続く N 行のうち i 行目 (1 ≦ i ≦ N) には受験者の文理の区分を表す文字 t_i と、英語、数学、理科、国語、地理歴史の点数を表す整数 e_i, m_i, s_i, j_i, g_i がこの順に半角スペース区切りで与えられます。
# ・t_i について文系は "l" ("L" の小文字)、理系は "s" で表されます。
# ・入力は合計で N + 1 行となり、入力値最終行の末尾に改行が１つ入ります。

# それぞれの値は文字列で標準入力から渡されます。標準入力からの値取得方法はこちらをご確認ください
# 期待する出力
# paiza 大学の入試の2段階選抜を何人通過できるかを整数で 1 行に出力してください。

# 最後は改行し、余計な文字、空行を含んではいけません。

# 条件
# すべてのテストケースにおいて、以下の条件をみたします。

# ・1 ≦ N ≦ 1,000
# ・各 i (1 ≦ i ≦ N) について
# ・t_i は英字小文字で "l","s" のいずれか
# ・0 ≦ e_i, m_i, s_i, j_i, g_i ≦ 100

# ---------------解答----------------

count = gets.to_i
success = 0
count.times do
  score = gets.split.map(&:chomp)
  new_score = score.map(&:to_i)
  if score.map(&:to_i).sum >= 350
      if score[0] == "l" && new_score[4] + new_score[5] >= 150
          success += 1
      elsif score[0] == "s" && new_score[2] + new_score[3] >= 150
          success += 1
      end
  end
end
puts "#{success}"